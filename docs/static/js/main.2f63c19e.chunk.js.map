{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","gif","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","img","GifExpertApp","categorias","categoria","ReactDOM","render","document","getElementById"],"mappings":"mMAGe,SAASA,EAAT,GAAyC,IAAlBC,EAAiB,EAAjBA,cACpC,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACE,mCACE,uBAAMC,SAXW,SAACC,GAEpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAQP,GAAR,mBAAuBO,OACrCN,EAAc,MAMd,UAEE,8CACA,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAlBnB,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,e,mCCPdG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACvC,OACE,sBAAKc,UAAU,2DAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,kCAAKA,EAAL,WCFOO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SACxB,ECF0B,SAACA,GAC3B,MAA0Bd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAKA,EAA4BpC,mBAAS,IAArC,mBAkBA,OAlBA,UAEAqC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAK,SAACC,GACtBH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGZ,CAACpB,IASGqB,EDtB2BK,CAAa1B,GAAjCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAEtB,OACE,qCACE,qBAAIJ,UAAU,sDAAd,UACG,IACAhB,EAAU,OAEZoB,GACC,mBAAGJ,UAAU,qDAAb,yBAIF,qBAAKA,UAAU,YAAf,SACGH,EAAOJ,KAAI,SAACkB,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIhB,aESjBiB,MAxBf,WAGI,MAAoC1C,mBAAS,CAAC,uBAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAMA,OACI,qCACI,8CACA,cAACD,EAAD,CAAaC,cAAiBA,IAC9B,uBAEA,6BAEQ4C,EAAWpB,KAAK,SAAAqB,GAAS,OAAI,cAAC,EAAD,CAAyB9B,SAAW8B,GAAtBA,Y,MCjB/DC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2f63c19e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function AddCategory({ setCategorias }) {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputValue = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    //Para evitar que se envie todo el formulario y se recargue la pagina\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategorias((c) => [inputValue, ...c]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* <h1>{ inputValue }</h1> */}\r\n        <h2>Add Category</h2>\r\n        <input type=\"text\" value={inputValue} onChange={handleInputValue} />\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategorias: PropTypes.func.isRequired,\r\n};\r\n","export const getGifs = async(category) => {\r\n    \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=BHPiTzVbQhlqJXwRk0xpPHIo3F1VbqgU`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(gif => {\r\n        return {\r\n            id: gif.id,\r\n            title: gif.title,\r\n            url: gif.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn animate__delay-1s\">\r\n      <img src={url} alt={title}></img>\r\n      <p> {title} </p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"../components/GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn animate__delay-1s\">\r\n        {\" \"}\r\n        {category}{\" \"}\r\n      </h3>\r\n      {loading && (\r\n        <p className=\"animate__animated animate__flash animate__delay-1s\">\r\n          Cargando...\r\n        </p>\r\n      )}\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  const [images, setImages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setstate({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  //   setTimeout(() => {\r\n  //     setstate({\r\n  //       data: [1, 2, 3, 4, 5, 6],\r\n  //       loading: false,\r\n  //     });\r\n  //   }, 3000);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nfunction GifExpertApp() {\r\n\r\n    //const categorias = ['Samurai X', 'Dragon ball', 'Sakura']\r\n    const [categorias, setCategorias] = useState(['Sakura card captor']);\r\n\r\n    // const handleAdd = () => {\r\n    //     setcategorias( [...categorias, 'Space captain']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategorias= { setCategorias }/>\r\n            <hr />\r\n\r\n            <ul>\r\n                {\r\n                    categorias.map( categoria => <GifGrid key={categoria} category= {categoria}/> )\r\n                }\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render( \n    <GifExpertApp />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}